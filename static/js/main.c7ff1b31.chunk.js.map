{"version":3,"sources":["components/home_screen/Banner.js","components/home_screen/HomeHeader.js","components/home_screen/TodoListLink.js","components/home_screen/TodoListLinks.js","components/home_screen/HomeScreen.js","components/list_screen/List_Transaction.js","jsTPS_Transaction.js","components/item_screen/ItemScreen.js","components/list_screen/ListHeading.js","components/list_screen/ListMoveUp.js","components/list_screen/ListMoveDown.js","components/list_screen/ListRemoveItem.js","components/list_screen/ListItemCard.js","components/list_screen/ListAddItem.js","components/list_screen/ListItemsTable.js","components/list_screen/ListTrash.js","components/list_screen/ListModal.js","jsTPS.js","components/list_screen/ListScreen.js","App.js","index.js"],"names":["Banner","id","Component","HomeHeader","TodoListLink","className","onClick","this","props","loadList","bind","todoList","name","TodoListLinks","todoLists","map","key","HomeScreen","createNewList","List_Transaction","initList","futureList","callBack","console","log","ItemScreen","state","assigned_to","item","completed","description","due_date","assignedToChange","e","setState","target","value","completedChange","checked","descriptionChange","dueDateChange","checkValidity","assigned","des","test","submit","future","JSON","parse","stringify","list","items","length","push","transaction","modifyList","window","tps","addTransaction","type","defaultValue","onChange","defaultChecked","ListHeading","goHome","ListMoveUp","moveItemUp","index","ListMoveDown","moveItemDown","listSize","ListRemoveItem","removeItem","ListItemCard","completionStatus","listItem","editItem","ListAddItem","addItem","ListItemsTable","sortItemsByTask","sortItemsByDueDate","sortItemsByStatus","todoItem","ListTrash","toggleDialog","ListModal","visible","data-animation","deleteList","jsTPS","transactions","mostRecentTransaction","performingDo","performingUndo","i","pop","doTransaction","hasTransactionToRedo","hasTransactionToUndo","undoTransaction","getSize","text","toString","currentItemSortCriteria","ListScreen","showingDialog","onOwnerTextChange","setListOwner","onNameTextChange","setListName","onDeleteList","row","stopPropagation","swapItems","parseInt","splice","changeItem","sortTasks","sortingCriteria","sort","compare","isCurrentItemSortCriteria","testCriteria","SORT_BY_TASK_INCREASING","SORT_BY_TASK_DECREASING","SORT_BY_STATUS_INCREASING","SORT_BY_STATUS_DECREASING","SORT_BY_DUE_DATE_INCREASING","SORT_BY_DUE_DATE_DECREASING","item1","item2","temp","getListName","alert","owner","newOwner","newName","oldIndex","newIndex","document","onkeydown","getElementById","firstElementChild","ctrlKey","keyCode","preventDefault","getListOwner","AppScreen","HOME_SCREEN","LIST_SCREEN","ITEM_SCREEN","App","currentScreen","testTodoListData","currentList","currentItem","newList","newTodoLists","slice","clearAllTransactions","todoListToLoad","updateKeys","newLists","goItem","ReactDOM","render"],"mappings":"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","file":"static/js/main.c7ff1b31.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport class Banner extends Component {\n    render() {\n        return (\n        <div id=\"home_banner_container\">\n            @todo<br />\n            List Maker\n        </div>\n        )\n    }\n}\n\nexport default Banner\n","import React, { Component } from 'react'\n\nexport class HomeHeader extends Component {\n    render() {\n        return (\n            <h3 id=\"home_your_lists_heading\">Your Lists</h3>\n        )\n    }\n}\n\nexport default HomeHeader\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nexport class TodoListLink extends Component {\n    render() {        \n        return (\n            <a \n                className='home_list_link'\n                onClick={this.props.loadList.bind(this, this.props.todoList)}\n            >\n                {this.props.todoList.name}<br />\n            </a>\n        )\n    }\n}\n\nTodoListLink.propTypes = {\n    loadList: PropTypes.func.isRequired,\n    todoList: PropTypes.object.isRequired\n}\n\nexport default TodoListLink\n","import React, { Component } from 'react';\nimport TodoListLink from './TodoListLink'\nimport PropTypes from 'prop-types';\n\nclass TodoListLinks extends Component {\n    render() {\n        return (\n            <div id=\"home_your_lists_list\">{\n                this.props.todoLists.map((todoList)=>(\n                    <TodoListLink  \n                        key={todoList.key}\n                        loadList={this.props.loadList} \n                        todoList={todoList} />\n                ))}\n            </div>\n        );\n    }\n}\n\nTodoListLinks.propTypes = {\n    loadList: PropTypes.func.isRequired,\n    todoLists: PropTypes.array.isRequired\n}\n\nexport default TodoListLinks;","import React, { Component } from 'react'\nimport Banner from './Banner'\nimport HomeHeader from './HomeHeader'\nimport TodoListLinks from './TodoListLinks'\nimport PropTypes from 'prop-types';\n\nexport class HomeScreen extends Component {\n    render() {\n        return (\n            <div id=\"todo_home\">\n                <div id=\"home_your_lists_container\">\n                    <HomeHeader />\n                    <TodoListLinks loadList={this.props.loadList} todoLists={this.props.todoLists} />\n                </div>\n                <Banner />\n                <div id=\"home_new_list_container\">\n                    <button onClick={this.props.createNewList} id=\"home_new_list_button\">\n                        Create a New To Do List\n                    </button>\n                </div>\n            </div>\n        )\n    }\n}\n\nHomeScreen.propTypes = {\n    loadList: PropTypes.func.isRequired,\n    todoLists: PropTypes.array.isRequired\n}\n\nexport default HomeScreen\n","import jsTPS_Transaction from \"../../jsTPS_Transaction\";\r\n\r\nclass List_Transaction extends jsTPS_Transaction {\r\n    constructor(initList, futureList, callBack) {\r\n        super();\r\n        this.initList = initList;\r\n        this.futureList = futureList;\r\n        this.callBack = callBack;\r\n    }\r\n\r\n    doTransaction() {\r\n        this.callBack(this.futureList, this.initList.key);\r\n    }\r\n\r\n    undoTransaction() {\r\n        this.callBack(this.initList, this.initList.key);\r\n    }\r\n\r\n    toString() {\r\n        return \"Go to \" + this.futureList.name;\r\n    }\r\n}\r\n\r\nexport default List_Transaction","class jsTPS_Transaction {\r\n    doTransaction() {\r\n        console.log(\"WARNING, THIS METHOD SHOULD HAVE BEEN OVERRIDDEN\");\r\n    }\r\n    undoTransaction() {\r\n        console.log(\"WARNING, THIS METHOD SHOULD HAVE BEEN OVERRIDDEN\");\r\n    }\r\n}\r\n\r\nexport default jsTPS_Transaction","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport List_Transaction from '../list_screen/List_Transaction'\n\nexport class ItemScreen extends Component {\n    state = {\n        assigned_to: this.props.item.assigned_to,\n        completed: this.props.item.completed,\n        description: this.props.item.description,\n        due_date: this.props.item.due_date,\n        key: this.props.item.key\n    }\n\n    assignedToChange = (e) => {\n        this.setState({ assigned_to: e.target.value })\n    }\n\n    completedChange = (e) => {\n        this.setState({ completed: e.target.checked })\n    }\n\n    descriptionChange = (e) => {\n        this.setState({ description: e.target.value })\n    }\n\n    dueDateChange = (e) => {\n        this.setState({ due_date: e.target.value })\n    }\n\n    checkValidity = () => {\n        let assigned = this.state.assigned_to;\n        let des = this.state.description;\n        if (/^\\s*$/.test(this.state.assigned_to)) {\n            assigned = \"Unknown\";\n        }\n        if (/^\\s*$/.test(this.state.description)) {\n            des = \"Unknown\"\n        }\n        this.setState({ assigned_to: assigned, description: des }, function() { this.submit() });\n    }\n\n    submit = () => {\n        \n        let future = JSON.parse(JSON.stringify(this.props.list));\n        let item;\n        if (this.props.item.key !== -1) {\n            item = JSON.parse(JSON.stringify(this.props.item));\n            item.assigned_to = this.state.assigned_to;\n            item.completed = this.state.completed;\n            item.description = this.state.description;\n            item.due_date = this.state.due_date;\n            future.items[this.props.item.key] = item;\n        }\n        else {\n            this.setState({key: this.props.list.items.length})\n            future.items.push(this.state);\n        }\n        let transaction = new List_Transaction(this.props.list, future, this.props.modifyList);\n        window.tps.addTransaction(transaction);\n    }\n\n    render() {\n        return (\n            <div id=\"todo_item\">\n                <h1><b>Item</b></h1>\n                <p className=\"text_toolbar\">\n                    Description:<input id=\"item_description_textfield\" className=\"edit_item_textfield\" type=\"text\"\n                        defaultValue={this.props.item.description} onChange={this.descriptionChange} />\n                </p>\n                <p className=\"text_toolbar\">\n                    Assigned To:<input id=\"item_assigned_to_textfield\" className=\"edit_item_textfield\" type=\"text\"\n                        defaultValue={this.props.item.assigned_to} onChange={this.assignedToChange} />\n                </p>\n                <p className=\"text_toolbar\">\n                    Due Date:<input id=\"item_due_date_picker\" className=\"edit_item_textfield\" type=\"date\"\n                        defaultValue={this.props.item.due_date} onChange={this.dueDateChange} />\n                </p>\n                <p>Completed:<input id=\"item_completed_checkbox\" type=\"checkbox\" defaultChecked={this.props.item.completed}\n                    onChange={this.completedChange} /></p>\n                <button onClick={this.checkValidity} id=\"item_form_submit_button\">Submit</button>\n                <button onClick={this.props.loadList.bind(this, this.props.list)} id=\"item_form_cancel_button\">Cancel</button>\n            </div>\n        )\n    }\n}\n\nItemScreen.propTypes = {\n    item: PropTypes.object.isRequired,\n}\n\nexport default ItemScreen\n","import React, { Component } from 'react'\n\nexport class ListHeading extends Component {\n    render() {\n        return (\n            <div id=\"list_heading\"\n                onClick={this.props.goHome}\n            >   @todo\n            </div>\n        )\n    }\n}\n\nexport default ListHeading\n","import React, { Component } from 'react'\r\n\r\nexport class ListMoveUp extends Component {\r\n    render() {\r\n        return (\r\n            <div onClick={this.props.moveItemUp} className={(this.props.index !== 0) ? \"move_up_btn\" : \"move_up_btn disabled\"}>&#8679;</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListMoveUp\r\n","import React, { Component } from 'react'\r\n\r\nexport class ListMoveDown extends Component {\r\n    render() {\r\n        return (\r\n            <div onClick={this.props.moveItemDown}\r\n                className={(this.props.index !== (this.props.listSize - 1)) ? \"move_down_btn\" : \"disabled move_down_btn\"}>&#8681;</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListMoveDown\r\n","import React, { Component } from 'react'\r\n\r\nexport class ListRemoveItem extends Component {\r\n    render() {\r\n        return (\r\n            <div onClick={this.props.removeItem} className=\"remove_item_btn\">&#10005;</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListRemoveItem\r\n","import React, { Component } from 'react'\nimport ListMoveUp from './ListMoveUp'\nimport ListMoveDown from './ListMoveDown'\nimport ListRemoveItem from './ListRemoveItem'\n\nexport class ListItemCard extends Component {\n    render() {\n        let completionStatus;\n        if (this.props.listItem.completed) {\n            completionStatus = <div className='list_item_card_completed'>\n                Completed\n            </div>\n        }\n        else {\n            completionStatus = <div className='list_item_card_not_completed'>\n                Pending\n            </div>\n        }\n        return (\n            <div onClick={this.props.editItem.bind(this, this.props.listItem)}  className='list_item_card'>\n                <div className='list_item_card_description'>\n                    {this.props.listItem.description}\n                </div>\n                <div className='list_item_card_assigned_to'>\n                    Assigned To: <strong>{this.props.listItem.assigned_to}</strong>\n                </div>\n                <div className='list_item_card_due_date'>\n                    {this.props.listItem.due_date}\n                </div>\n                <div className='list_item_card_completed'>\n                    {completionStatus}\n                </div>\n                <ListMoveUp moveItemUp={this.props.moveItemUp.bind(this, this.props.index)} \n                index={this.props.index}/>\n                <ListMoveDown moveItemDown={this.props.moveItemDown.bind(this, this.props.index)}\n                index={this.props.index} listSize={this.props.listSize} />\n                <ListRemoveItem removeItem={this.props.removeItem.bind(this, this.props.index)} />\n            </div>\n        )\n    }\n}\n\nexport default ListItemCard\n","import React, { Component } from 'react'\r\n\r\nexport class ListAddItem extends Component {\r\n    render() {\r\n        return (\r\n            <div onClick={this.props.addItem} className=\"list_item_add_card\">+</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListAddItem\r\n","import React, { Component } from 'react'\nimport ListItemCard from './ListItemCard'\nimport ListAddItem from './ListAddItem';\n\nexport class ListItemsTable extends Component {\n    render() {\n        return (\n            <div id=\"list_items_container\" className='list_item_header_card'>\n                <div className=\"list_item_header_card\"></div>\n                <div onClick={this.props.sortItemsByTask} className=\"list_item_task_header\">Task</div>\n                <div onClick={this.props.sortItemsByDueDate} className=\"list_item_due_date_header\">Due Date</div>\n                <div onClick={this.props.sortItemsByStatus} className=\"list_item_status_header\">Status</div>\n                <div className=\"list_items_container\">\n                    {\n                        this.props.todoList.items.map((todoItem, index) => (\n                            <ListItemCard\n                                editItem={this.props.editItem}\n                                key={todoItem.key}\n                                index={index}\n                                listItem={todoItem}\n                                moveItemUp={this.props.moveItemUp}\n                                moveItemDown={this.props.moveItemDown}\n                                removeItem={this.props.removeItem}\n                                listSize={this.props.todoList.items.length}\n                                    />\n                        ))\n                    }\n                    <ListAddItem addItem={this.props.addItem}\n                         />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ListItemsTable\n","import React, { Component } from 'react'\n\nexport class ListTrash extends Component {\n    render() {\n        return (\n            <div onClick={this.props.toggleDialog} id=\"list_trash\">&#128465;</div>\n        )\n    }\n}\n\nexport default ListTrash\n","import React, { Component } from 'react'\r\n\r\nexport class ListModal extends Component {\r\n    render() {\r\n        return (\r\n            <div className={this.props.visible ? \"modal is_visible\" : \"modal\"} id=\"modal_yes_no_dialog\" data-animation=\"slideInOutLeft\">\r\n                <div className=\"modal_dialog\">\r\n                    <header className=\"dialog_header\">\r\n                        Delete list?\r\n            </header>\r\n                    <section className=\"dialog_content\">\r\n                        <p><strong>Are you sure you want to delete this list?</strong></p>\r\n                    </section>\r\n                    <button onClick={this.props.deleteList} id=\"dialog_yes_button\">Yes</button>\r\n                    <button onClick={this.props.toggleDialog} id=\"dialog_no_button\" >No</button>\r\n                    <footer className=\"dialog_footer\">\r\n                        The list will not be retreivable.\r\n            </footer>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListModal\r\n","class jsTPS {\r\n    constructor() {\r\n        this.transactions = [];\r\n        this.mostRecentTransaction = -1;\r\n        this.performingDo = false;\r\n        this.performingUndo = false;\r\n    }\r\n\r\n    isPerformingDo() { return this.performingDo; }\r\n    isPerformingUndo() { return this.performingUndo; }\r\n\r\n    addTransaction(transaction) {\r\n        // ARE THERE OLD UNDONE TRANSACTIONS ON THE STACK THAT FIRST\r\n        // NEED TO BE CLEARED OUT, i.e. ARE WE BRANCHING?\r\n        if ((this.mostRecentTransaction < 0) || (this.mostRecentTransaction < (this.transactions.length - 1))) {\r\n            for (let i = this.transactions.length - 1; i > this.mostRecentTransaction; i--) {\r\n                this.transactions.pop();\r\n            }\r\n        }\r\n\r\n        // AND NOW ADD THE TRANSACTION\r\n        this.transactions.push(transaction);\r\n\r\n        // AND EXECUTE IT\r\n        this.doTransaction();\r\n    }\r\n\r\n    doTransaction() {\r\n        if (this.hasTransactionToRedo()) {\r\n            this.performingDo = true;\r\n            let transaction = this.transactions[this.mostRecentTransaction + 1];\r\n            transaction.doTransaction();\r\n            this.mostRecentTransaction++;\r\n            this.performingDo = false;\r\n        }\r\n    }\r\n\r\n    peekUndo() {\r\n        if (this.hasTransactionToUndo()) {\r\n            return this.transactions[this.mostRecentTransaction];\r\n        }\r\n        else\r\n            return null;\r\n    }\r\n\r\n    peekDo() {\r\n        if (this.hasTransactionToRedo()) {\r\n            return this.transactions[this.mostRecentTransaction + 1];\r\n        }\r\n        else\r\n            return null;\r\n    }\r\n\r\n    undoTransaction() {\r\n        if (this.hasTransactionToUndo()) {\r\n            this.performingUndo = true;\r\n            let transaction = this.transactions[this.mostRecentTransaction];\r\n            transaction.undoTransaction();\r\n            this.mostRecentTransaction--;\r\n            this.performingUndo = false;\r\n        }\r\n    }\r\n\r\n    clearAllTransactions() {\r\n        // REMOVE ALL THE TRANSACTIONS\r\n        this.transactions = [];\r\n\r\n        // MAKE SURE TO RESET THE LOCATION OF THE\r\n        // TOP OF THE TPS STACK TOO\r\n        this.mostRecentTransaction = -1;\r\n    }\r\n\r\n    getSize() {\r\n        return this.transactions.length;\r\n    }\r\n\r\n    getRedoSize() {\r\n        return this.getSize() - this.mostRecentTransaction - 1;\r\n    }\r\n\r\n    getUndoSize() {\r\n        return this.mostRecentTransaction + 1;\r\n    }\r\n\r\n    hasTransactionToUndo() {\r\n        return this.mostRecentTransaction >= 0;\r\n    }\r\n\r\n    hasTransactionToRedo() {\r\n        return this.mostRecentTransaction < (this.transactions.length - 1);\r\n    }\r\n\r\n    toString() {\r\n        let text = \"--Number of Transactions: \" + this.getSize() + \"\\n\";\r\n        text += \"--Current Index on Stack: \" + this.mostRecentTransaction + \"\\n\";\r\n        text += \"--Current Transaction Stack:\\n\";\r\n\r\n        for (let i = 0; i <= this.mostRecentTransaction; i++) {\r\n            let jT = this.transactions[i];\r\n            text += \"----\" + jT.toString() + \"\\n\";\r\n        }\r\n        return text;\r\n    }\r\n}\r\n\r\nexport default jsTPS","import React, { Component } from 'react'\nimport ListHeading from './ListHeading'\nimport ListItemsTable from './ListItemsTable'\nimport ListTrash from './ListTrash'\nimport ListModal from './ListModal'\nimport PropTypes from 'prop-types';\nimport jsTPS from '../../jsTPS'\nimport List_Transaction from './List_Transaction'\n\nwindow.tps = new jsTPS();\nlet currentItemSortCriteria = \"None\";\n\nexport class ListScreen extends Component {\n    state = {\n        showingDialog: false,\n    }\n\n    getListName() {\n        if (this.props.todoList) {\n            return this.props.todoList.name;\n        }\n        else\n            return \"\";\n    }\n    getListOwner() {\n        if (this.props.todoList) {\n            return this.props.todoList.owner;\n        }\n    }\n\n    setListOwner(newOwner) {\n        if (this.props.todoList) {\n            let future = JSON.parse(JSON.stringify(this.props.todoList))\n            future.owner = newOwner;\n            let transaction = new List_Transaction(this.props.todoList, future, this.props.modifyList);\n            window.tps.addTransaction(transaction);\n        }\n    }\n\n    setListName(newName) {\n        if (this.props.todoList) {\n            let future = JSON.parse(JSON.stringify(this.props.todoList))\n            future.name = newName;\n            let transaction = new List_Transaction(this.props.todoList, future, this.props.modifyList);\n            window.tps.addTransaction(transaction);\n        }\n    }\n\n    onOwnerTextChange = (e) => {\n        this.setListOwner(e.target.value);\n    }\n\n    onNameTextChange = (e) => {\n        this.setListName(e.target.value);\n    }\n\n    toggleDialog = () => {\n        this.setState({ showingDialog: !this.state.showingDialog });\n    }\n\n    onDeleteList = () => {\n        this.toggleDialog();\n        this.props.deleteList(this.props.todoList.key);\n        this.props.goHome();\n    }\n\n    swapItems(oldIndex, newIndex) {\n        let future = JSON.parse(JSON.stringify(this.props.todoList))\n        let items = future.items;\n        let temp = items[oldIndex];\n        items[oldIndex] = items[newIndex];\n        items[newIndex] = temp;\n        let transaction = new List_Transaction(this.props.todoList, future, this.props.modifyList);\n        window.tps.addTransaction(transaction);\n    }\n\n    moveItemUp = (row, e) => {\n        e.stopPropagation();\n        if (row > 0) {\n            this.swapItems(parseInt(row), parseInt(row - 1));\n        }\n    }\n\n    moveItemDown = (row, e) => {\n        e.stopPropagation();\n        if (row !== (this.props.todoList.items.length - 1)) {\n            this.swapItems(parseInt(row), parseInt(row + 1))\n        }\n    }\n\n    removeItem = (row, e) => {\n        e.stopPropagation();\n        let future = JSON.parse(JSON.stringify(this.props.todoList))\n        let items = future.items;\n        items.splice(row, 1);\n        let transaction = new List_Transaction(this.props.todoList, future, this.props.modifyList);\n        window.tps.addTransaction(transaction);\n    }\n\n    addItem = () => {\n        this.props.changeItem({\n            \"key\": -1,\n            \"description\": \"\",\n            \"due_date\": \"No Date Set\",\n            \"assigned_to\": \"\",\n            \"completed\": false\n        });\n    }\n\n    editItem = (item) => {\n        this.props.changeItem(item);\n    }\n\n    sortTasks = (sortingCriteria) => {\n        currentItemSortCriteria = sortingCriteria;\n\n        let future = JSON.parse(JSON.stringify(this.props.todoList))\n        let items = future.items;\n        items.sort(this.compare);\n        let transaction = new List_Transaction(this.props.todoList, future, this.props.modifyList);\n        window.tps.addTransaction(transaction);\n    }\n\n    isCurrentItemSortCriteria = (testCriteria) => {\n        return currentItemSortCriteria === testCriteria;\n    }\n\n    sortItemsByTask = () => {\n        // IF WE ARE CURRENTLY INCREASING BY TASK SWITCH TO DECREASING\n        if (this.isCurrentItemSortCriteria(SORT_BY_TASK_INCREASING)) {\n            this.sortTasks(SORT_BY_TASK_DECREASING);\n        }\n        // ALL OTHER CASES SORT BY INCREASING\n        else {\n            this.sortTasks(SORT_BY_TASK_INCREASING);\n        }\n    }\n\n    sortItemsByStatus = () => {\n        // IF WE ARE CURRENTLY INCREASING BY STATUS SWITCH TO DECREASING\n        if (this.isCurrentItemSortCriteria(SORT_BY_STATUS_INCREASING)) {\n            this.sortTasks(SORT_BY_STATUS_DECREASING);\n        }\n        // ALL OTHER CASES SORT BY INCRASING\n        else {\n            this.sortTasks(SORT_BY_STATUS_INCREASING);\n        }\n    }\n\n    sortItemsByDueDate = () => {\n        if (this.isCurrentItemSortCriteria(SORT_BY_DUE_DATE_INCREASING)) {\n            this.sortTasks(SORT_BY_DUE_DATE_DECREASING);\n        }\n        else {\n            this.sortTasks(SORT_BY_DUE_DATE_INCREASING);\n        }\n    }\n\n    compare = (item1, item2) => {\n        // IF IT'S A DECREASING CRITERIA SWAP THE ITEMS\n        if (this.isCurrentItemSortCriteria(SORT_BY_TASK_DECREASING)\n            || this.isCurrentItemSortCriteria(SORT_BY_STATUS_DECREASING)\n            || this.isCurrentItemSortCriteria(SORT_BY_DUE_DATE_DECREASING)) {\n            let temp = item1;\n            item1 = item2;\n            item2 = temp;\n        }\n        // SORT BY ITEM DESCRIPTION\n        if (this.isCurrentItemSortCriteria(SORT_BY_TASK_INCREASING)\n            || this.isCurrentItemSortCriteria(SORT_BY_TASK_DECREASING)) {\n            if (item1.description < item2.description)\n                return -1;\n            else if (item1.description > item2.description)\n                return 1;\n            else\n                return 0;\n        }\n        else if (this.isCurrentItemSortCriteria(SORT_BY_DUE_DATE_INCREASING)\n            || this.isCurrentItemSortCriteria(SORT_BY_DUE_DATE_DECREASING)) {\n            if (item1.due_date < item2.due_date)\n                return -1;\n            else if (item1.due_date > item2.due_date)\n                return 1;\n            else\n                return 0;\n        }\n        // SORT BY COMPLETED\n        else {\n            if (item1.completed < item2.completed)\n                return -1;\n            else if (item1.completed > item2.completed)\n                return 1;\n            else\n                return 0;\n        }\n    }\n\n    componentDidMount() {\n        document.onkeydown = function handleKeyPress(e) {\n            if (document.getElementById(\"root\").firstElementChild.id === \"todo_list\") {\n                if (e.ctrlKey && e.keyCode === 90) {\n                    e.preventDefault();\n                    window.tps.undoTransaction();\n                }\n                else if (e.ctrlKey && e.keyCode === 89) {\n                    e.preventDefault();\n                    window.tps.doTransaction();\n                }\n            }\n        }\n    }\n\n    goHome = () => {\n        if (! /^\\s*$/.test(this.getListName())) {\n            this.props.goHome();\n        }\n        else {\n            alert(\"Please enter a non-empty name for the todolist\");\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"todo_list\">\n                <ListHeading goHome={this.goHome} />\n                <ListTrash toggleDialog={this.toggleDialog} />\n                <div id=\"list_details_container\">\n                    <div id=\"list_details_name_container\" className=\"text_toolbar\">\n                        <span id=\"list_name_prompt\">Name:</span>\n                        <input\n                            value={this.getListName()}\n                            type=\"text\"\n                            id=\"list_name_textfield\"\n                            onChange={this.onNameTextChange} />\n                    </div>\n                    <div id=\"list_details_owner_container\" className=\"text_toolbar\">\n                        <span id=\"list_owner_prompt\">Owner:</span>\n                        <input\n                            value={this.getListOwner()}\n                            type=\"text\"\n                            id=\"list_owner_textfield\"\n                            onChange={this.onOwnerTextChange} />\n                    </div>\n                </div>\n                <ListItemsTable todoList={this.props.todoList}\n                    loadList={this.props.loadList}\n                    editItem={this.editItem}\n                    moveItemUp={this.moveItemUp}\n                    moveItemDown={this.moveItemDown}\n                    removeItem={this.removeItem}\n                    sortItemsByTask={this.sortItemsByTask}\n                    sortItemsByDueDate={this.sortItemsByDueDate}\n                    sortItemsByStatus={this.sortItemsByStatus}\n                    addItem={this.addItem} />\n                <ListModal toggleDialog={this.toggleDialog} visible={this.state.showingDialog}\n                    deleteList={this.onDeleteList} />\n            </div>\n        )\n    }\n}\n\nconst SORT_BY_TASK_INCREASING = 'sort_by_task_increasing';\nconst SORT_BY_TASK_DECREASING = 'sort_by_task_decreasing';\nconst SORT_BY_DUE_DATE_INCREASING = 'sort_by_due_date_increasing';\nconst SORT_BY_DUE_DATE_DECREASING = 'sort_by_due_date_decreasing';\nconst SORT_BY_STATUS_INCREASING = 'sort_by_status_increasing';\nconst SORT_BY_STATUS_DECREASING = 'sort_by_status_decreasing';\n\nListScreen.propTypes = {\n    goHome: PropTypes.func.isRequired,\n    todoList: PropTypes.object.isRequired,\n    loadList: PropTypes.func.isRequired,\n    deleteList: PropTypes.func.isRequired,\n    changeItem: PropTypes.func.isRequired,\n}\n\nexport default ListScreen\n","/**\n * @author Nathaniel Wine, 112594013\n */\n\nimport React, { Component } from 'react';\nimport testTodoListData from './TestTodoListData.json'\nimport HomeScreen from './components/home_screen/HomeScreen'\nimport ItemScreen from './components/item_screen/ItemScreen'\nimport ListScreen from './components/list_screen/ListScreen'\n\nconst AppScreen = {\n  HOME_SCREEN: \"HOME_SCREEN\",\n  LIST_SCREEN: \"LIST_SCREEN\",\n  ITEM_SCREEN: \"ITEM_SCREEN\"\n}\n\nclass App extends Component {\n  state = {\n    currentScreen: AppScreen.HOME_SCREEN,\n    todoLists: testTodoListData.todoLists,\n    currentList: null,\n    currentItem: null,\n  }\n\n  modifyList = (newList, index) => {\n    let newTodoLists = this.state.todoLists.slice();\n    newTodoLists[index] = newList;\n    this.setState({ todoLists: newTodoLists });\n    this.loadList(newList);\n  }\n\n  goHome = () => {\n    window.tps.clearAllTransactions();\n    this.setState({ currentScreen: AppScreen.HOME_SCREEN });\n    this.setState({ currentList: null });\n  }\n\n  loadList = (todoListToLoad) => {\n    this.setState({ currentScreen: AppScreen.LIST_SCREEN });\n    this.setState({ currentList: todoListToLoad });\n    this.updateKeys(todoListToLoad);\n  }\n\n  createNewList = () => {\n    let newList = {\n      key: this.state.todoLists.length,\n      name: \"Unknown\",\n      owner: \"Unknown\",\n      items: []\n    };\n    this.state.todoLists.push(newList);\n    this.loadList(newList);\n  }\n\n  deleteList = (index) => {\n    if (index >= 0 && index < this.state.todoLists.length) {\n      let newLists = this.state.todoLists.slice();\n      newLists.splice(index, 1);\n      let i = 0;\n      for (; i < newLists.length; i++) {\n        newLists[i].key = i;\n      }\n      this.setState({ todoLists: newLists });\n    }\n  }\n\n  updateKeys(list) {\n    if (list !== null) {\n      let newList = list;\n      let i = 0;\n      for (; i < newList.items.length; i++) {\n        newList.items[i].key = i;\n      }\n      this.setState({ currentList: newList });\n    }\n  }\n\n  changeItem = (item) => {\n    this.setState({ currentItem: item })\n    this.goItem();\n  }\n\n  goItem = () => {\n    this.setState({ currentScreen: AppScreen.ITEM_SCREEN });\n  }\n\n  render() {\n    switch (this.state.currentScreen) {\n      case AppScreen.HOME_SCREEN:\n        return <HomeScreen\n          loadList={this.loadList.bind(this)}\n          todoLists={this.state.todoLists}\n          createNewList={this.createNewList} />;\n      case AppScreen.LIST_SCREEN:\n        return <ListScreen\n          goHome={this.goHome.bind(this)}\n          todoList={this.state.currentList}\n          loadList={this.loadList}\n          deleteList={this.deleteList}\n          changeItem={this.changeItem} \n          modifyList={this.modifyList}\n          />;\n      case AppScreen.ITEM_SCREEN:\n        return <ItemScreen\n          item={this.state.currentItem}\n          list={this.state.currentList}\n          loadList={this.loadList} \n          modifyList={this.modifyList}/>;\n      default:\n        return <div>ERROR</div>;\n    }\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/fonts/Lexend Exa/css.css'\nimport './css/todo_layout.css';\nimport './css/todo_style.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}